@import url('https://fonts.googleapis.com/css2?family=Kaushan+Script&display=swap');
/* font-family: "Kaushan Script", cursive; */

/* Go from most general to most specific, so we do * first */
* {
    margin: 0;
    padding: 0;
}
html {
    /* this is how we get a full sized fixed centered background */
    background: url('../img/bg.jpg') no-repeat center center fixed;
    background-size: cover;
}
/* Apply default font style at the body tag and all children elements will 
inherit it unless we override it with another style further down */
/* CSS styles apply in the order the come in.
Internal CSS code would override this since it comes after in the head, which can be overriden by inline styling. */
body {
    font-family: "Kaushan Script", cursive;
}

.container {
    width: 900px;
    margin: 0 auto;  /* 0 is top and bottom */
    /* when we use inline block to stack things, we have to 
    zero out the font size on the container element */
    font-size: 0;
}

.polaroid {
    /* Was 300px but I had to subtract 20 from both sides */
    width: 260px;
    margin: 20px;
    display: inline-block;
    /* WHENEVER YOU WANT A CHILD ELEMENT TO POSITION WITHIN A PARENT ELEMENT,
    YOU HAVE TO RELATIVE POSITION THE PARENT */
    position: relative;
}

/* Whenever you style an image, it's usually best practice to 
make the image take up 100% of its parent element and then
give the parent a width and height */
.polaroid img {
    width: 100%;
    height: auto;
    /* Border shorthand is 1-width, 2-style, 3-color */
    border: 10px solid #ccc;
    border-bottom-width: 45px;
}

/* Looking for a pattern. Something of the polaroid class with a p tag inside. */
.polaroid p {
    font-size: 1rem;
    position: absolute;
    bottom: 14px;
    width: 280px;
    text-align: center;
    color: #333;

}